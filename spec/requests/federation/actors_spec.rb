require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/federation/actors', type: :request do
  let(:user) { FactoryBot.create :user }
  let(:other_user) { FactoryBot.create :user }
  let(:following) { Federails::Following.create actor: user.actor, target_actor: other_user.actor }
  let(:follower) { Federails::Following.create actor: other_user.actor, target_actor: user.actor }

  describe 'GET /show' do
    it 'renders a successful response' do
      get federails.server_actor_url(user.actor, format: :json)
      expect(response).to be_successful
    end
  end

  describe 'GET /followers' do
    it 'renders a successful response' do
      follower
      get federails.followers_server_actor_url(user.actor, format: :json)
      expect(response).to be_successful
    end
  end

  describe 'GET /following' do
    it 'renders a successful response' do
      following
      get federails.following_server_actor_url(user.actor, format: :json)
      expect(response).to be_successful
    end
  end
end
